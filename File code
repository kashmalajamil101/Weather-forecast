Code (data ) present in files:
frontend :
contain index.html file 
<!DOCTYPE html>
<html>
<head>
  <title>Weather Forecast Application</title>
</head>
<body>
  <h1>Weather Forecast Application</h1>
  <form id="forecastForm">
    <label for="city">City:</label>
    <input type="text" id="city" name="city"><br><br>
    <button type="button" onclick="getWeather()">Get Weather</button>
  </form>
  <h2>Weather Forecast</h2>
  <div id="forecast"></div>
  <script>
    async function getWeather() {
      const city = document.getElementById("city").value;
      const response = await fetch(http://localhost:5000/weather?city=${city});
      const weather = await response.json();
      const forecastDiv = document.getElementById("forecast");
      forecastDiv.innerHTML = <p><strong>${weather.city}:</strong> ${weather.description}, ${weather.temperature}Â°C</p>;
    }
  </script>
</body>
</html>
Backend :
1.Docker file
FROM node:14

WORKDIR /usr/src/app

COPY package*.json ./

RUN npm install

COPY . .

EXPOSE 3000
CMD ["node", "server.js"]
2.Package.json  file 
{
  "name": "backend",
  "version": "1.0.0",
  "main": "server.js",
  "dependencies": {
    "express": "^4.17.1",
    "mysql2": "^2.2.5",
    "sequelize": "^6.5.1",
    "axios": "^0.21.1"
  }
}

3.Server.js file:
const express = require("express");
const Sequelize = require("sequelize");

const app = express();

// Connect to the database
const sequelize = new Sequelize("weatherdata", "dbuser", "dbpassword", {
  host: "database",
  dialect: "mysql",
});

// Root route
app.get("/", (req, res) => {
  res.send("Welcome to the Weather Forecast API! Available endpoints: /weather");
});

// Weather route
app.get("/weather", (req, res) => {
  const city = req.query.city || "Unknown City";
  const forecast = {
    city: city,
    description: "Sunny",
    temperature: 25,
  };
  res.json(forecast);
});

// Start the server
app.listen(5000, () => {
  console.log("Backend is running on port 5000");
});
docker compose.yml file:
version: '3.8'

services:
  frontend:
    image: nginx:latest
    volumes:
      - ./frontend:/usr/share/nginx/html
    ports:
      - '3001:80'  # Exposes frontend on http://localhost:3001
    depends_on:
      - backend

  backend:
    build: ./backend
    ports:
      - '5000:5000'  # Exposes backend on http://localhost:5000
    depends_on:
      - database
    environment:
      DATABASE_URL: mysql://dbuser:dbpassword@database:3306/weatherdata
 Database:
    image: mysql:latest
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: weatherdata
      MYSQL_USER: dbuser
      MYSQL_PASSWORD: dbpassword
    ports:
      - '3307:3306'  # Exposes database on localhost:3307
